generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Snack {
  id          Int      @id @default(autoincrement())
  snack       String   @db.VarChar(255)
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  price       Decimal  @db.Decimal(10, 2)
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItem OrderItem[]
  Order     Order?      @relation(fields: [orderId], references: [id])
  orderId   Int?
}

model Customer {
  id           Int      @id @default(autoincrement())
  fullanme     String   @db.VarChar(255)
  email        String   @unique @db.VarChar(255)
  mobile       String   @db.VarChar(255)
  document     String   @db.VarChar(255)
  zipcode      String   @db.VarChar(255)
  street       String   @db.VarChar(255)
  number       String   @db.VarChar(255)
  complement   String   @db.VarChar(255)
  neighborhood String   @db.VarChar(255)
  city         String   @db.VarChar(255)
  state        String   @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  orderItem OrderItem[]
  Order     Order[]
}

enum OrderStatus {
  PENDING
  PAID
  CANCELED
}

model Order {
  id           Int         @id @default(autoincrement())
  status       OrderStatus @default(PENDING)
  total        Decimal     @db.Decimal(10, 2)
  trasactionId String?     @db.VarChar(255)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  snacks     Snack[]
  customerId Int
  customer   Customer    @relation(fields: [customerId], references: [id])
  OrderItem  OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int      @default(0)
  subtotal  Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderId Int
  order   Order @relation(fields: [orderId], references: [id])

  snackId    Int
  snack      Snack     @relation(fields: [snackId], references: [id])
  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId Int?
}
